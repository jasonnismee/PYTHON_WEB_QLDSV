// ===== D·ªØ li·ªáu sinh vi√™n =====
const studentData = {
    name: "Nguy·ªÖn VƒÉn An",
    id: "SV001234",
    class: "CNTT-K15",
    birth: "15/03/2002"
};

// ===== D·ªØ li·ªáu l·ªõp h·ªçc =====
const classesData = [
    { id: 1, name: "L·∫≠p tr√¨nh Web", code: "IT301", progress: 75, instructor: "TS. Nguy·ªÖn VƒÉn B" },
    { id: 2, name: "C∆° s·ªü d·ªØ li·ªáu", code: "IT302", progress: 60, instructor: "PGS. Tr·∫ßn Th·ªã C" },
    { id: 3, name: "M·∫°ng m√°y t√≠nh", code: "IT303", progress: 45, instructor: "ThS. L√™ VƒÉn D" },
    { id: 4, name: "Tr√≠ tu·ªá nh√¢n t·∫°o", code: "IT304", progress: 30, instructor: "GS. Ph·∫°m Th·ªã E" }
];

// ===== D·ªØ li·ªáu ƒëi·ªÉm th√†nh ph·∫ßn =====
const scoreData = [
    { subject: "L·∫≠p tr√¨nh Web", cc: 9, gk: 8, ck: 8.5 },
    { subject: "C∆° s·ªü d·ªØ li·ªáu", cc: 8, gk: 7.5, ck: 8 },
    { subject: "M·∫°ng m√°y t√≠nh", cc: 8.5, gk: 8, ck: 8.5 },
    { subject: "Tr√≠ tu·ªá nh√¢n t·∫°o", cc: 9, gk: 9, ck: 9.2 }
];

let scoreChart = null;

// ===== Hi·ªÉn th·ªã th√¥ng tin sinh vi√™n =====
function renderStudentInfo(data) {
    document.getElementById('student-name').textContent = data.name;
    document.getElementById('student-id').textContent = data.id;
    document.getElementById('student-class').textContent = data.class;
    document.getElementById('birth-date').textContent = data.birth;
}

// ===== Sinh danh s√°ch l·ªõp h·ªçc =====
function generateClassCards(classes = classesData) {
    const grid = document.getElementById('classes-grid');
    grid.innerHTML = '';
    classes.forEach(cls => {
        const card = document.createElement('div');
        card.className = 'class-card';
        card.innerHTML = `
            <div class="class-name tooltip" data-tooltip="Gi·∫£ng vi√™n: ${cls.instructor}">${cls.name}</div>
            <div class="class-code">M√£ l·ªõp: ${cls.code}</div>
            <div class="progress-bar"><div class="progress-fill" style="width:${cls.progress}%"></div></div>
            <div style="margin-top:0.5rem;font-size:0.8rem;color:#666;">Ti·∫øn ƒë·ªô: ${cls.progress}%</div>
        `;
        card.addEventListener('click', () => showSubjectScore(cls.name));
        grid.appendChild(card);
    });
}

// ===== Hi·ªÉn th·ªã ƒëi·ªÉm c·ªßa 1 m√¥n =====
function showSubjectScore(subjectName) {
    const subject = scoreData.find(s => s.subject === subjectName);
    if (!subject) return;

    const tbody = document.getElementById('score-table-body');
    const section = document.getElementById('score-section');
    const chartSection = document.getElementById('chart-section');
    const title = document.getElementById('score-title');

    tbody.innerHTML = '';
    title.textContent = `üìä ƒêi·ªÉm m√¥n h·ªçc: ${subjectName}`;
    section.style.display = 'block';
    chartSection.style.display = 'block';

    const avg = ((subject.cc * 0.1) + (subject.gk * 0.3) + (subject.ck * 0.6)).toFixed(2);
    const row = `
        <tr>
            <td>${subject.subject}</td>
            <td>${subject.cc}</td>
            <td>${subject.gk}</td>
            <td>${subject.ck}</td>
            <td><b>${avg}</b></td>
        </tr>
    `;
    tbody.innerHTML = row;

    renderScoreChart(subject);
}

// ===== Bi·ªÉu ƒë·ªì ƒëi·ªÉm c·ªßa 1 m√¥n =====
function renderScoreChart(subject) {
    const ctx = document.getElementById('scoreChart').getContext('2d');
    if (scoreChart) scoreChart.destroy();

    scoreChart = new Chart(ctx, {
        type: 'bar',
        data: {
            labels: ['Chuy√™n c·∫ßn', 'Gi·ªØa k·ª≥', 'Cu·ªëi k·ª≥', 'Trung b√¨nh'],
            datasets: [{
                label: subject.subject,
                data: [subject.cc, subject.gk, subject.ck, ((subject.cc * 0.1) + (subject.gk * 0.3) + (subject.ck * 0.6)).toFixed(2)],
                backgroundColor: ['#DC143C', '#F75270', '#F7CAC9', '#999']
            }]
        },
        options: {
            scales: {
                y: { beginAtZero: true, max: 10 }
            },
            plugins: { legend: { display: false } }
        }
    });
}

// ===== Dark mode =====
function toggleDarkMode() {
    document.body.classList.toggle('dark-mode');
}

// ===== ƒêƒÉng xu·∫•t =====
function handleLogout() {
    alert('ƒêƒÉng xu·∫•t th√†nh c√¥ng!');
    localStorage.removeItem('token');
    window.location.href = '/login';
}

// ===== Kh·ªüi t·∫°o trang =====
renderStudentInfo(studentData);
generateClassCards();
